// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.Infrastructure;

#nullable disable

namespace Shop.Infrastructure.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20230823150423_Added_OrderStatus")]
    partial class Added_OrderStatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Shop.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Index"), 1L, 1);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Shop.Domain.Entities.OrderProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Order", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Shop.Domain.Entities.Owned.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("SubTotal")
                                .HasPrecision(14, 4)
                                .HasColumnType("decimal(14,4)");

                            b1.Property<decimal>("Total")
                                .HasPrecision(14, 4)
                                .HasColumnType("decimal(14,4)");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.OwnsOne("Shop.Domain.Entities.Owned.Discount", "RequestedDiscount", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Percent")
                                .HasPrecision(7, 4)
                                .HasColumnType("decimal(7,4)");

                            b1.Property<decimal>("Value")
                                .HasPrecision(14, 4)
                                .HasColumnType("decimal(14,4)");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.OwnsOne("Shop.Domain.Entities.Owned.Discount", "ResultDiscount", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Percent")
                                .HasPrecision(7, 4)
                                .HasColumnType("decimal(7,4)");

                            b1.Property<decimal>("Value")
                                .HasPrecision(14, 4)
                                .HasColumnType("decimal(14,4)");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.Navigation("Customer");

                    b.Navigation("Price");

                    b.Navigation("RequestedDiscount");

                    b.Navigation("ResultDiscount");
                });

            modelBuilder.Entity("Shop.Domain.Entities.OrderProduct", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Shop.Domain.Entities.Owned.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("OrderProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("SubTotal")
                                .HasPrecision(14, 4)
                                .HasColumnType("decimal(14,4)");

                            b1.Property<decimal>("Total")
                                .HasPrecision(14, 4)
                                .HasColumnType("decimal(14,4)");

                            b1.HasKey("OrderProductId");

                            b1.ToTable("OrderProducts");

                            b1.WithOwner()
                                .HasForeignKey("OrderProductId");
                        });

                    b.OwnsOne("Shop.Domain.Entities.Owned.Unit", "Unit", b1 =>
                        {
                            b1.Property<Guid>("OrderProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Measure")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal>("Quantity")
                                .HasPrecision(10, 3)
                                .HasColumnType("decimal(10,3)");

                            b1.HasKey("OrderProductId");

                            b1.ToTable("OrderProducts");

                            b1.WithOwner()
                                .HasForeignKey("OrderProductId");
                        });

                    b.Navigation("Order");

                    b.Navigation("Price");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Order", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
